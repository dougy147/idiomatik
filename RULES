// This file contains **PUBLIC** RULES and AXIOMS
// In a multi-agent system, every agent is aware of those AXIOMS and RULES

// RULES represent AXIOMS or POSSIBLE TRANSFORMATIONS given an INPUT.
// It will also possible to give a CLASS of SYMBOLS as a RULE:
// For example : STR + STR <=> (STR + STR)
//
// The idea is to say to the program that "_" means ANY_OPERAND
//
// Rules are first parsed by 'read_rules.py' with PARSE(TOKENIZE(rule)) function
// Invalid rules propositions are excluded so that in IDIOMATIK, RULES are always TRUE.

// AXIOMS:
// Axioms are RULES without any TRANSFORMATION needed.
// e.g. :    ~A

//~A
//B = C

// TRANSFORMATION RULES:
// Transformation rules contain the REWRITE_AS operator
// There structure is PATTERN_TO_BE_MATCHED <=> REWRITTEN_PATTERN
// In the future, there could be multiple rewrite symbols with different directions

// Example rules
//(_) --> _
//(~ _) --> ~ _
//_ => _ --> ~ _ V _


// Shitty rules
// ~ _ --> (~ _)
