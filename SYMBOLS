[=] [NULL= ] [COMMENT=//] [ID=@] [SUB_ID=---]

// DO NOT REMOVE THE LINE ABOVE
// It corresponds to SYMBOLS or NAMES of PARAMETERS to be interpreted in this table, separated from their SYMBOLIC VALUE.
// '[' and ']' respectively represent the beginning and end of their evaluation.
// '=' represents a delimitor between the NAME and the SYMBOLIC VALUE.
// ID is the general identifier (surrounders, operators, etc.) while SUB_ID give characteristics to current ID.
// If you had PARAMETERS, append them on the right of the line above.

// A CATEGORY of SYMBOLS is preceded by '@'
// INFORMATIONS and PROPERTIES of the current CATEGORY are preceded by '---'

@SURROUNDERS

() [] {}

---NAMES

PARENTHESIS BRAKET ACCOLADE


@OPERATORS

~  ?  +   -   /   *   <  >  <= >= =  == <=> => V &  --> ^ . % %%%

---NAMES

NOT MAYBE PLUS MINUS DIV TIMES LESS_THAN MORE_THAN LESS_EQ MORE_EQ EQUALS EQUIVALENT ISOMORPH IMPLIES OR AND REWRITE_AS EXP COMPOSE MODULO IF-ELSE

---OPERANDS

R  L  LR  LR  LR  LR  LR LR LR LR LR LR LR LR LR LR LR LR LR LR RRR

// PRECEDENCE = priority of an operator. The LOWEST NUMBER = the HIGHEST PRIORITY
---PRECEDENCE

1 1 4 4 3 3 0 0 0 0 0 0 0 11 11 11 0 -2 -3 3 11

// EQUALS : same values (e.g 'dougy' = 'dougy') ;  EQUIVALENT : same class (e.g. STR == STR); ISOMORPH : same structure (e.g. STR + STR <=> ANY_STR + ANY_STR )


@META

_ _0 _1 _2 _3 _4 _5 _6 _7 _8 _9 _10 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z $ Â¤ >< #

---NAMES

ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR ANY_STR OPERAND ANY_UNARY_OP ANY_BINARY_OP BLOCK
