mult_neutral :: $A . 0 --> 0
$A . s ( $B ) --> $A + ( $A . $B )
$A . s ( 0 ) --> $A + ( $A . 0 )
$A + ( $A . 0 ) --> $A + 0
$A + 0 --> $A
oversurrounded :: << << A >> >> --> ( A )
peano_add :: $A + s ( B ) --> s ( $A + B )
abbrev_OR :: ~ ( ~ $A && ~ $B ) --> $A || $B
implication :: ~ $A || $B --> $A => $B
if_and_only_if :: ( $A => $B ) && ( $B => $A ) --> $A <=> $B
taut1 :: $P || ~ $P --> true
def_false :: ~ true --> false
( _ ) --> _
( ( _ ) ) --> ( _ )
( ~ _ ) --> ~ _
A => B --> ~ A V B
add_neutral :: A + 0 --> A
add_peano2 :: A + s ( B ) --> s ( A + B )
mult_neutral0 :: A . 0 --> 0
mult_peano2 :: A . s ( B ) --> A + ( A . B )
reflexivity :: $A = $A --> true
add_commutativity :: $A + $B --> $B + $A
add_associativity :: $A + ( $B + $C ) --> ( $A + $B ) + $C
add_neutral0 :: $A + 0 --> $A
